CREATE TABLE person ( 
                      id BIGSERIAL NOT NULL PRIMARY KEY,
                      first_name VARCHAR(50) NOT NULL,
                      last_name  VARCHAR(50) NOT NULL,
                      gender VARCHAR(8) NOT NULL,
                      date_of_birth DATE NOT NULL,
                      email VARCHAR(150)
                      );


INSERT INTO person (first_name, last_name, gender, date_of_birth, email)
        VALUES ('Anne', 'Jakes', FEMALE', date '2000-01-23' );


SELECT * FROM person;




PostgreSQL is a powerful open-source relational database management system. 

Below are some essential PostgreSQL commands:

1.
psql -U <username> -d <database_name> -h <host> -p <port>
OR 
\c <database_name>


2. Creating a new database:
CREATE DATABASE database_name;

3.Dropping a database
   DROP DATABASE database_name;

4. Select all data from database:
   SELECT * FROM <database>;

5. Selecting first_name from a table:
    SELECT first_name FROM <name of table>;

6. select email from table:
   SELECT email FROM <name of table>;



In PostgreSQL, the ORDER BY keyword is used in a SELECT statement to sort the result set based on one or more columns. 
It allows you to specify the order in which the rows should be returned.

-- Sorting by a single column in ascending order
SELECT employee_id, first_name, last_name, salary
FROM employees
ORDER BY salary ASC;

-- Sorting by a single column in descending order
SELECT employee_id, first_name, last_name, salary
FROM employees
ORDER BY salary DESC;


SELECT * FROM <name of table> ORDER BY first_name;
SELECT * FROM <name of table> ORDER BY last_name;
SELECT * FROM <name of table> ORDER BY gender;
SELECT * FROM <name of table> ORDER BY country_of_birth;

ASC --- ASCENDING
DESC --- DESCENDING

SELECT * FROM <name of table> ORDER BY first_name DESC;
SELECT * FROM <name of table> ORDER BY last_name DESC;
SELECT * FROM <name of table> ORDER BY gender DESC;
SELECT * FROM <name of table> ORDER BY country_of_birth DESC;


In PostgreSQL, the WHERE clause is used in a SELECT, UPDATE, or DELETE statement to filter the rows returned by a query or the rows 
that are affected by an update or delete operation. It allows you to specify a condition that must be met for a row to be included 
in the result set or be updated/deleted.

 SELECT * FROM person WHERE gender = 'Male' AND ( country_of_birth = 'Albania' OR country_of_birth = 'China');




In PostgreSQL (and SQL in general), comparison operators are used to perform comparisons between two expressions or values and 
return a boolean result (True or False) based on the comparison's outcome. These operators are commonly used in the WHERE clause of 
SELECT, UPDATE, and DELETE statements to filter rows based on certain conditions.

Here are some of the most commonly used comparison operators in PostgreSQL:

1. Equality (=): Checks if two values are equal.

SELECT * FROM table_name WHERE column_name = value;

2. Inequality (<> or !=): Checks if two values are not equal.

   SELECT * FROM table_name WHERE column_name <> value;

3. Greater Than (>): Checks if one value is greater than another.

   SELECT * FROM table_name WHERE column_name > value;

4. Less Than (<): Checks if one value is less than another.

  SELECT * FROM table_name WHERE column_name < value;

5. Greater Than or Equal To (>=): Checks if one value is greater than or equal to another.

   SELECT * FROM table_name WHERE column_name >= value;

6. Less Than or Equal To (<=): Checks if one value is less than or equal to another.
   
   SELECT * FROM table_name WHERE column_name <= value;

7. IS NULL: Checks if a value is NULL (i.e., it has no value).
   SELECT * FROM table_name WHERE column_name IS NULL;